{"ast":null,"code":"var _jsxFileName = \"/Users/rominavilatta/Frontend III/entregable-frontend-3-junio22-main/src/components/Item.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport data from './data.json';\nimport { useState } from 'react'; // El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Item = _ref => {\n  _s();\n\n  let {\n    nombre,\n    descripcion,\n    s\n  } = _ref;\n  const [counter, setCounter] = useState(0);\n\n  const handleClick = () => {\n    console.log('CLick');\n  };\n\n  return (\n    /*#__PURE__*/\n    //  <div className='producto'>\n    //     {data.map( (item, i) =>\n    //     <div className='div'>\n    //       <h3 key={i}>{item.producto.nombre}</h3>\n    //       <p key={i}>{item.producto.descripcion}</p>\n    //       <h5 key={i}><span>item.stock</span></h5>\n    //       <button onClick={handleClick}>Comprar</button>\n    //     </div>\n    //       )}\n    //   </div>\n    _jsxDEV(\"div\", {\n      className: \"producto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: descripcion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: stock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          children: \"Comprar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), \"}\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  );\n};\n\n_s(Item, \"rU49ahHXqILO256x8h9hfi2uqSs=\");\n\n_c = Item;\nexport default Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["React","data","useState","Item","nombre","descripcion","s","counter","setCounter","handleClick","console","log","stock"],"sources":["/Users/rominavilatta/Frontend III/entregable-frontend-3-junio22-main/src/components/Item.js"],"sourcesContent":["import React from \"react\";\r\nimport data from './data.json'\r\nimport { useState } from 'react';\r\n\r\n\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n\r\nconst Item = ({nombre, descripcion, s}) => {\r\n  const [ counter, setCounter ] = useState(0)\r\n\r\n  const handleClick = () =>{\r\n    console.log('CLick')\r\n  }\r\n  \r\n  return (\r\n    \r\n      //  <div className='producto'>\r\n      //     {data.map( (item, i) =>\r\n      //     <div className='div'>\r\n      //       <h3 key={i}>{item.producto.nombre}</h3>\r\n      //       <p key={i}>{item.producto.descripcion}</p>\r\n      //       <h5 key={i}><span>item.stock</span></h5>\r\n      //       <button onClick={handleClick}>Comprar</button>\r\n      //     </div>\r\n      //       )}\r\n            \r\n      //   </div>\r\n\r\n      <div className='producto'>\r\n        <div className= 'div'>\r\n          <h3>{nombre}</h3>\r\n          <p>{descripcion}</p>\r\n          <h5>{stock}</h5>\r\n          <button onClick={handleClick}>Comprar</button>\r\n        </div>\r\n\r\n        }\r\n\r\n      </div>\r\n    \r\n  )\r\n}\r\n\r\n\r\nexport default Item;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,IAAI,GAAG,QAA8B;EAAA;;EAAA,IAA7B;IAACC,MAAD;IAASC,WAAT;IAAsBC;EAAtB,CAA6B;EACzC,MAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BN,QAAQ,CAAC,CAAD,CAAxC;;EAEA,MAAMO,WAAW,GAAG,MAAK;IACvBC,OAAO,CAACC,GAAR,CAAY,OAAZ;EACD,CAFD;;EAIA;IAAA;IAEI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IAEA;MAAK,SAAS,EAAC,UAAf;MAAA,wBACE;QAAK,SAAS,EAAE,KAAhB;QAAA,wBACE;UAAA,UAAKP;QAAL;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,UAAIC;QAAJ;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAA,UAAKO;QAAL;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE;UAAQ,OAAO,EAAEH,WAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IAAA;MAAA;MAAA;MAAA;IAAA;EAdJ;AA2BD,CAlCD;;GAAMN,I;;KAAAA,I;AAqCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}