{"ast":null,"code":"var _jsxFileName = \"/Users/rominavilatta/Frontend III/Entregable-frontend-3/src/components/Item.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { ProductStyle, ButtonStyle } from '../styles/Styles'; // El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Item(_ref) {\n  _s();\n\n  let {\n    nombre,\n    img,\n    descripcion,\n    stock,\n    total\n  } = _ref;\n  const [numStock, setStock] = useState(stock);\n\n  const handleClick = () => {\n    if (numStock > 0) {\n      setStock(prevState => prevState - 1);\n      total();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProductStyle, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        alt: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: descripcion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Stock: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", numStock <= 0 ? 0 : numStock]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonStyle, {\n        disabled: stock <= 0,\n        onClick: () => handleClick(),\n        children: numStock <= 0 ? \"Sin Stock\" : \"Comprar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Item, \"mX0Y1S/Irnm+275UB1d/Ui4KLaU=\");\n\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["useState","ProductStyle","ButtonStyle","Item","nombre","img","descripcion","stock","total","numStock","setStock","handleClick","prevState"],"sources":["/Users/rominavilatta/Frontend III/Entregable-frontend-3/src/components/Item.js"],"sourcesContent":["\r\nimport { useState } from 'react';\r\nimport { ProductStyle, ButtonStyle } from '../styles/Styles';\r\n\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n\r\nexport default function Item({ nombre, img, descripcion, stock, total }) {\r\n\r\n  const [numStock, setStock] = useState(stock);\r\n\r\n  const handleClick = () => {\r\n\r\n    if (numStock > 0) {\r\n      setStock((prevState) => prevState - 1);\r\n      total();\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <ProductStyle>\r\n      <div className='div'>\r\n        <h3>{nombre}</h3>\r\n        <img src={img} alt='img' />\r\n        <p>{descripcion}</p>\r\n        <h5>Stock: <span> {numStock <= 0 ? 0 : numStock}</span></h5>\r\n        <ButtonStyle disabled={stock <= 0 } onClick={() => handleClick()}>{numStock <= 0 ? \"Sin Stock\" : \"Comprar\"}</ButtonStyle>\r\n      </div>\r\n    </ProductStyle>\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\n"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,kBAA1C,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,IAAT,OAA0D;EAAA;;EAAA,IAA5C;IAAEC,MAAF;IAAUC,GAAV;IAAeC,WAAf;IAA4BC,KAA5B;IAAmCC;EAAnC,CAA4C;EAEvE,MAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBV,QAAQ,CAACO,KAAD,CAArC;;EAEA,MAAMI,WAAW,GAAG,MAAM;IAExB,IAAIF,QAAQ,GAAG,CAAf,EAAkB;MAChBC,QAAQ,CAAEE,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAAR;MACAJ,KAAK;IACN;EAEF,CAPD;;EASA,oBAEE,QAAC,YAAD;IAAA,uBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE;QAAA,UAAKJ;MAAL;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,GAAG,EAAEC,GAAV;QAAe,GAAG,EAAC;MAAnB;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA,UAAIC;MAAJ;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAA,mCAAW;UAAA,gBAAQG,QAAQ,IAAI,CAAZ,GAAgB,CAAhB,GAAoBA,QAA5B;QAAA;UAAA;UAAA;UAAA;QAAA,QAAX;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE,QAAC,WAAD;QAAa,QAAQ,EAAEF,KAAK,IAAI,CAAhC;QAAoC,OAAO,EAAE,MAAMI,WAAW,EAA9D;QAAA,UAAmEF,QAAQ,IAAI,CAAZ,GAAgB,WAAhB,GAA8B;MAAjG;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QAFF;AAaD;;GA1BuBN,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}