{"ast":null,"code":"var _jsxFileName = \"/Users/rominavilatta/Frontend III/entregable-frontend-3-junio22-main/src/App.js\",\n    _s = $RefreshSig$();\n\n// El componente App es el padre de:\n// - Cabecera\n// - Listado\n// ESTADO: App debe manejar en su estado un número para contabilizar el total de elementos comprados.\n// MÉTODOS: App debe tener un método para aumentar este número y que pueda ser ejecutado por su nieto Item.\n// PROPS: App deberá pasar por props lo necesario a sus componenetes internos.\nimport Listado from \"./components/Listado\";\nimport Cabecera from \"./components/Cabecera\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [count, setC] = useState(0); //modifico el estado inicial \n  //si todavia hay stock entonces aumento el contador \n\n  const total = () => {\n    setCount(count + 1);\n  };\n\n  return (\n    /*#__PURE__*/\n    //asigno el valor del metodo a la props total que luego uso en items, lo mismo para la props count\n    _jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Cabecera, {\n        count: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Listado, {\n        total: total\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"NBJuFvbPbC1oxaEHhTLUH5skMIk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Listado","Cabecera","useState","App","count","setC","total","setCount"],"sources":["/Users/rominavilatta/Frontend III/entregable-frontend-3-junio22-main/src/App.js"],"sourcesContent":["// El componente App es el padre de:\n// - Cabecera\n// - Listado\n// ESTADO: App debe manejar en su estado un número para contabilizar el total de elementos comprados.\n// MÉTODOS: App debe tener un método para aumentar este número y que pueda ser ejecutado por su nieto Item.\n// PROPS: App deberá pasar por props lo necesario a sus componenetes internos.\nimport Listado from \"./components/Listado\";\nimport Cabecera from \"./components/Cabecera\";\nimport { useState } from \"react\";\n\nfunction App() {\n\n\n  const[count, setC] = useState(0);\n\n  //modifico el estado inicial \n  //si todavia hay stock entonces aumento el contador \n  const total = () => {\n      setCount(count + 1);\n\n  }\n\n\n  return (\n    //asigno el valor del metodo a la props total que luego uso en items, lo mismo para la props count\n    <div className=\"App\">\n      <Cabecera count={count} />\n      <Listado  total={total}/> \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAGb,MAAK,CAACC,KAAD,EAAQC,IAAR,IAAgBH,QAAQ,CAAC,CAAD,CAA7B,CAHa,CAKb;EACA;;EACA,MAAMI,KAAK,GAAG,MAAM;IAChBC,QAAQ,CAACH,KAAK,GAAG,CAAT,CAAR;EAEH,CAHD;;EAMA;IAAA;IACE;IACA;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE,QAAC,QAAD;QAAU,KAAK,EAAEA;MAAjB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,OAAD;QAAU,KAAK,EAAEE;MAAjB;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFF;AAOD;;GApBQH,G;;KAAAA,G;AAsBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}