{"ast":null,"code":"var _jsxFileName = \"/Users/rominavilatta/Frontend III/entregable-frontend-3-junio22-main/src/App.js\",\n    _s = $RefreshSig$();\n\n// El componente App es el padre de:\n// - Cabecera\n// - Listado\n// ESTADO: App debe manejar en su estado un número para contabilizar el total de elementos comprados.\n// MÉTODOS: App debe tener un método para aumentar este número y que pueda ser ejecutado por su nieto Item.\n// PROPS: App deberá pasar por props lo necesario a sus componenetes internos.\nimport Listado from \"./components/Listado\";\nimport Cabecera from \"./components/Cabecera\";\nimport { useState } from \"react\";\nimport { AppStyle } from \"./styles/Styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [count, setCount] = useState(0); //modifico el estado inicial \n  //si todavia hay stock entonces aumento el contador \n\n  const total = () => {\n    setCount(count + 1);\n  };\n\n  return (\n    /*#__PURE__*/\n    //asigno el valor del metodo a la props total que luego uso en items, lo mismo para la props count\n    _jsxDEV(AppStyle, {\n      children: [/*#__PURE__*/_jsxDEV(Cabecera, {\n        count: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Listado, {\n        total: total\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 8\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Listado","Cabecera","useState","AppStyle","App","count","setCount","total"],"sources":["/Users/rominavilatta/Frontend III/entregable-frontend-3-junio22-main/src/App.js"],"sourcesContent":["// El componente App es el padre de:\n// - Cabecera\n// - Listado\n// ESTADO: App debe manejar en su estado un número para contabilizar el total de elementos comprados.\n// MÉTODOS: App debe tener un método para aumentar este número y que pueda ser ejecutado por su nieto Item.\n// PROPS: App deberá pasar por props lo necesario a sus componenetes internos.\nimport Listado from \"./components/Listado\";\nimport Cabecera from \"./components/Cabecera\";\nimport {\n  useState\n} from \"react\";\nimport {\n  AppStyle\n} from \"./styles/Styles\";\n\nfunction App() {\n\n\n  const [count, setCount] = useState(0);\n\n  //modifico el estado inicial \n  //si todavia hay stock entonces aumento el contador \n  const total = () => {\n    setCount(count + 1);\n\n  }\n\n  return (\n    //asigno el valor del metodo a la props total que luego uso en items, lo mismo para la props count\n    <\n    AppStyle >\n    <\n    Cabecera count = {\n      count\n    }\n    /> <\n    Listado total = {\n      total\n    }\n    />  <\n    /AppStyle>\n  );\n}\n\nexport default App;"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SACEC,QADF,QAEO,OAFP;AAGA,SACEC,QADF,QAEO,iBAFP;;;AAIA,SAASC,GAAT,GAAe;EAAA;;EAGb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC,CAHa,CAKb;EACA;;EACA,MAAMK,KAAK,GAAG,MAAM;IAClBD,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;EAED,CAHD;;EAKA;IAAA;IACE;IACA,QACA,QADA;MAAA,wBAEA,QACA,QADA;QACS,KAAK,EACZA;MAFF;QAAA;QAAA;QAAA;MAAA,QAFA,oBAMG,QACH,OADG;QACK,KAAK,EACXE;MAFC;QAAA;QAAA;QAAA;MAAA,QANH;IAAA;MAAA;MAAA;MAAA;IAAA;EAFF;AAeD;;GA3BQH,G;;KAAAA,G;AA6BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}