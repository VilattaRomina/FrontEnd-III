{"ast":null,"code":"var _jsxFileName = \"/Users/rominavilatta/Frontend III/entregable-frontend-3-junio22-main/src/components/Item.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; // El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Item(_ref) {\n  _s();\n\n  let {\n    nombre,\n    img,\n    descripcion,\n    stock,\n    total\n  } = _ref;\n  const [numStock, setStock] = useState(stock);\n\n  const handleClick = () => {\n    //si todavia hay stock\n    if (numStock > 0) {\n      setStock(prevState => prevState - 1);\n      total(); //console.log('click');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        alt: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: descripcion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Stock: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", numStock <= 0 ? \"\" : numStock]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleClick(),\n        children: numStock <= 0 ? \"Sin Stock\" : \"Comprar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 8\n  }, this);\n}\n\n_s(Item, \"mX0Y1S/Irnm+275UB1d/Ui4KLaU=\");\n\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["useState","Item","nombre","img","descripcion","stock","total","numStock","setStock","handleClick","prevState"],"sources":["/Users/rominavilatta/Frontend III/entregable-frontend-3-junio22-main/src/components/Item.js"],"sourcesContent":["\r\nimport {useState} from 'react';\r\n\r\n\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n\r\nexport default function Item ({nombre,img, descripcion, stock, total }){\r\n\r\n  const [numStock, setStock] = useState(stock);\r\n\r\n\r\n  const handleClick = () => {\r\n    //si todavia hay stock\r\n    if(numStock > 0){\r\n      setStock((prevState)=> prevState - 1);\r\n      total();\r\n      //console.log('click');\r\n    }\r\n    \r\n    }\r\n  \r\n  return (\r\n    \r\n       <div className='producto'>\r\n         \r\n          <div className='div'>\r\n            <h3>{nombre}</h3>\r\n            <img src={img} alt='img' />\r\n            <p>{descripcion}</p>\r\n            <h5>Stock: <span> {numStock <= 0 ?\"\" : numStock}</span></h5>\r\n            <button onClick={() => handleClick()}>{numStock <= 0 ? \"Sin Stock\" : \"Comprar\"}</button>\r\n          </div>\r\n        </div>\r\n    \r\n  )\r\n}\r\n\r\n\r\n\r\n"],"mappings":";;;AACA,SAAQA,QAAR,QAAuB,OAAvB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,IAAT,OAAwD;EAAA;;EAAA,IAAzC;IAACC,MAAD;IAAQC,GAAR;IAAaC,WAAb;IAA0BC,KAA1B;IAAiCC;EAAjC,CAAyC;EAErE,MAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBR,QAAQ,CAACK,KAAD,CAArC;;EAGA,MAAMI,WAAW,GAAG,MAAM;IACxB;IACA,IAAGF,QAAQ,GAAG,CAAd,EAAgB;MACdC,QAAQ,CAAEE,SAAD,IAAcA,SAAS,GAAG,CAA3B,CAAR;MACAJ,KAAK,GAFS,CAGd;IACD;EAEA,CARH;;EAUA,oBAEK;IAAK,SAAS,EAAC,UAAf;IAAA,uBAEG;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE;QAAA,UAAKJ;MAAL;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,GAAG,EAAEC,GAAV;QAAe,GAAG,EAAC;MAAnB;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA,UAAIC;MAAJ;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAA,mCAAW;UAAA,gBAAQG,QAAQ,IAAI,CAAZ,GAAe,EAAf,GAAoBA,QAA5B;QAAA;UAAA;UAAA;UAAA;QAAA,QAAX;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAQ,OAAO,EAAE,MAAME,WAAW,EAAlC;QAAA,UAAuCF,QAAQ,IAAI,CAAZ,GAAgB,WAAhB,GAA8B;MAArE;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFH;IAAA;IAAA;IAAA;EAAA,QAFL;AAcD;;GA7BuBN,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}