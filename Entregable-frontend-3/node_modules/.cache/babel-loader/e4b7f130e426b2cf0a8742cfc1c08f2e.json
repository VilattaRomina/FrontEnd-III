{"ast":null,"code":"var _jsxFileName = \"/Users/rominavilatta/Frontend III/entregable-frontend-3-junio22-main/src/components/Item.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; // El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Item(_ref) {\n  _s();\n\n  let {\n    data,\n    c\n  } = _ref;\n  const [numStock, setStock] = useState(); //La función pasada a useEffect se ejecutará después de que el renderizado es confirmado en la pantalla\n  //un segundo argumento a useEffect que es el conjunto de valores de los que depende el efecto. \n\n  useEffect(() => {\n    setStock();\n  }, [data.stock]);\n\n  const handleClick = () => {\n    if (numStock > 0) {\n      setStock(prevState => prevState - 1);\n    }\n\n    console.log('click');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: data.producto.nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.producto.descripcion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: numStock === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" Sin stock \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 35\n        }, this) : numStock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleClick(),\n        children: numStock === 0 ? 'sin Stock' : 'Comprar'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 8\n  }, this);\n}\n\n_s(Item, \"ClJ4BROxLcggFGGeBXIRSuDq18Q=\");\n\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["useState","useEffect","Item","data","c","numStock","setStock","stock","handleClick","prevState","console","log","producto","nombre","descripcion"],"sources":["/Users/rominavilatta/Frontend III/entregable-frontend-3-junio22-main/src/components/Item.js"],"sourcesContent":["\r\nimport {useState, useEffect} from 'react';\r\n\r\n\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n\r\nexport default function Item ({data, c}){\r\n\r\n  const [numStock, setStock] = useState();\r\n\r\n  //La función pasada a useEffect se ejecutará después de que el renderizado es confirmado en la pantalla\r\n  //un segundo argumento a useEffect que es el conjunto de valores de los que depende el efecto. \r\n   useEffect( ()=> {\r\n    setStock()\r\n }, [data.stock])\r\n\r\n  const handleClick = () => {\r\n    if(numStock > 0 ) {\r\n        setStock(prevState => prevState - 1);\r\n    }\r\n    console.log('click');\r\n  }\r\n\r\n  return (\r\n    \r\n       <div className='producto'>\r\n         \r\n          <div className='div'>\r\n            <h3>{data.producto.nombre}</h3>\r\n            <p>{data.producto.descripcion}</p>\r\n            <h5>{numStock === 0 ? <span> Sin stock </span> : numStock}</h5>\r\n            <button onClick={() => handleClick()}>{numStock === 0 ? 'sin Stock' : 'Comprar'}</button>\r\n          </div>\r\n          \r\n            \r\n        </div>\r\n    \r\n  )\r\n}\r\n\r\n\r\n\r\n"],"mappings":";;;AACA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,IAAT,OAAyB;EAAA;;EAAA,IAAV;IAACC,IAAD;IAAOC;EAAP,CAAU;EAEtC,MAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBN,QAAQ,EAArC,CAFsC,CAItC;EACA;;EACCC,SAAS,CAAE,MAAK;IACfK,QAAQ;EACV,CAFU,EAER,CAACH,IAAI,CAACI,KAAN,CAFQ,CAAT;;EAID,MAAMC,WAAW,GAAG,MAAM;IACxB,IAAGH,QAAQ,GAAG,CAAd,EAAkB;MACdC,QAAQ,CAACG,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAR;IACH;;IACDC,OAAO,CAACC,GAAR,CAAY,OAAZ;EACD,CALD;;EAOA,oBAEK;IAAK,SAAS,EAAC,UAAf;IAAA,uBAEG;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE;QAAA,UAAKR,IAAI,CAACS,QAAL,CAAcC;MAAnB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAIV,IAAI,CAACS,QAAL,CAAcE;MAAlB;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA,UAAKT,QAAQ,KAAK,CAAb,gBAAiB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAjB,GAA4CA;MAAjD;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAQ,OAAO,EAAE,MAAMG,WAAW,EAAlC;QAAA,UAAuCH,QAAQ,KAAK,CAAb,GAAiB,WAAjB,GAA+B;MAAtE;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFH;IAAA;IAAA;IAAA;EAAA,QAFL;AAeD;;GAhCuBH,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}